

task lowercase2015 << {
	doLast {
		String iswc2015ttl = new File('src/iswc2015_metadata_preview.ttl').text
		iswc2015ttl = iswc2015ttl.replaceAll(/(<http:\/\/data\.semanticweb\.org\/organization\/)(.*)>/) { it[1] + it[2].toLowerCase() + '>'} 
        iswc2015ttl = iswc2015ttl.replaceAll(/(<http:\/\/data\.semanticweb\.org\/person\/)(.*)>/) { it[1] + it[2].toLowerCase() + '>'}        
		new File('target/iswc-2015_metadata_preview.processed.ttl').text = iswc2015ttl
	}
}

task toTtl << {
	def tree = fileTree('src').include('*.rdf')
	tree.each {File file ->
    	def name = file.name.lastIndexOf('.').with {it != -1 ? file.name[0..<it] : file.name}
    	def ttlFile = new File("target/${name}.ttl")
    	ttlFile.createNewFile()
    	def cmd = "riot --pretty=ttl ${file}"
    	def proc = cmd.execute()
    	proc.in.eachLine {line -> ttlFile.append(line)}
		proc.err.eachLine {line -> println 'ERROR: ' + line}
		proc.waitFor() 
	}
}

task clearBigdata {
	
}

task upload << {
	def tree = fileTree('target').include('*.ttl')
	tree.each {File file ->
		def name = file.name.lastIndexOf('.').with {it != -1 ? file.name[0..<it] : file.name}
		def cmd = "curl -D- -H 'Content-Type: text/turtle' --upload-file ${file} -X POST 'http://iswc2015.apps.vismart.biz/bigdata/sparql?context-uri=http://${name}'"
		println cmd
		//def proc = cmd.execute()
		//proc.in.eachLine {line -> println line}
		//proc.err.eachLine {line -> println 'ERROR: ' + line}
		//proc.waitFor() 
	}
}
